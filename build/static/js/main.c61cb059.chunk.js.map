{"version":3,"sources":["../node_modules/readable-bytes/lib sync","card/Card.js","doughnut/index.js","thermometer/index.js","card/Of.js","card/CardFront.js","card/Controls.js","card/CardBack.js","card/index.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","status","children","useState","isFlipped","setIsFlipped","statusDisplay","default","loading","size","error","style","color","fontWeight","className","onClick","Doughnut","label","value","total","width","height","startAngle","Math","round","labelPosition","labelStyle","fontSize","fontFamily","fill","lineWidth","totalValue","data","findPosition","displayValue","positionOfEndOfLine","minTempY","floor","Thermometer","viewBox","maskUnits","x","y","cx","cy","r","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","mask","Of","numerator","denominator","CardFront","header","CPU_USAGE","CPU_PROCESSES","CPU_TEMPERATURE","GPU_TEMPERATURE","RAM_USAGE","RAM_TOTAL","GPU_RAM_USAGE","GPU_RAM_TOTAL","DISK_USAGE","DISK_TOTAL","readableBytes","Controls","endpoint","controls","setControls","useEffect","a","fetch","res","json","console","log","fetchData","length","click","control","text","alert","map","CardBack","NET_LOCAL_IP","PI_VERSION","HOST_OS_PRETTY_NAME","HOST_KERNEL","HOST_START","HOST_USERS","NET_OPEN_PORTS","ENUM_TIME","NODE_V","NPM_V","NET_ETH_TX","NET_ETH_RX","NET_WLAN_TX","NET_WLAN_RX","DISK_READ","DISK_WRITTEN","DateTime","fromFormat","toRelative","HydratedCard","now","setNow","timeOfNextUpdate","setTimeOfNextUpdate","setStatus","setData","polling","setInterval","Date","clearInterval","includes","ceil","HOST_NAME","endpoints","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c61cb059.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 25;","import ReactCardFlip from 'react-card-flip';\r\nimport { useState } from 'react';\r\nimport './Card.css';\r\n\r\nimport { IoSyncCircle } from \"react-icons/io5\";\r\nimport { IoMdSwap } from \"react-icons/io\";\r\n\r\nconst Card = ({status, children}) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const flipCard = () => setIsFlipped(!isFlipped);\r\n\r\n  const statusDisplay = {\r\n    default: <>{status}</>,\r\n    loading: <IoSyncCircle size=\"20\" />,\r\n    error: <div style={{color:'red', fontWeight:'bold'}}>error</div>,\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"status\">\r\n        {statusDisplay[status] || statusDisplay['default']}\r\n      </div>\r\n      \r\n      <div className=\"controls\">\r\n        <button onClick={flipCard}><IoMdSwap size=\"20\" /></button>\r\n      </div>\r\n\r\n      <ReactCardFlip isFlipped={isFlipped}>\r\n        {children}\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { PieChart } from 'react-minimal-pie-chart';\r\n\r\nconst Doughnut = ({label, value, total}) => (\r\n  <PieChart\r\n    style={{ width: 50, height: 50 }} \r\n    startAngle={270}\r\n    label={() => `${Math.round((value/total)*100)}%`}\r\n    labelPosition={0}\r\n    labelStyle={{\r\n      fontSize: 20,\r\n      fontFamily: 'sans-serif',\r\n      fill: '#0ff',\r\n    }}\r\n    lineWidth={20}\r\n    totalValue={total}\r\n    data={[\r\n      { value, color: '#0FF' },\r\n      { value: total-value, color: '#0FF3' },\r\n    ]}\r\n  />\r\n);\r\n\r\nexport default Doughnut;\r\n","const maxTemp = 90;\r\nconst minTemp = 20;\r\n\r\nconst maxTempY = 20;\r\nconst minTempY = 80;\r\n\r\nconst findPosition = (value) => {\r\n  // y1=20 is 100C\r\n  // y1=80 is 30C\r\n\r\n  let displayValue = value;\r\n  if (displayValue > maxTemp) displayValue = maxTemp;\r\n  if (displayValue < minTemp) displayValue = minTemp;\r\n\r\n  // displayValue is a number between min and max\r\n\r\n  const completionOfBarMultiplier = (displayValue - minTemp) / (maxTemp - minTemp);\r\n  const totalBarLength = minTempY - maxTempY; // 60\r\n  const completedBarLength = totalBarLength * completionOfBarMultiplier;\r\n  const positionOfEndOfLine = minTempY - completedBarLength;\r\n  return Math.floor(positionOfEndOfLine);\r\n};\r\n\r\nconst Thermometer = ({value}) => (\r\n  <svg\r\n    style={{ width: 50, height: 50 }} \r\n    viewBox=\"0 0 100 100\"\r\n  >\r\n    <defs>\r\n      <mask id=\"myMask\" maskUnits=\"userSpaceOnUse\">\r\n        <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"white\" />\r\n        <circle cx={50} cy={80} r={20} fill=\"black\" />\r\n      </mask>\r\n    </defs>\r\n    <circle cx={50} cy={80} r={20} fill=\"#0ff3\" />\r\n    <line x1=\"50\" y1=\"15\" x2=\"50\" y2=\"80\" stroke=\"#0ff3\" strokeWidth=\"25\" strokeLinecap=\"round\" mask=\"url(#myMask)\" />\r\n    <circle cx={50} cy={80} r={10} fill=\"#0ff\" />\r\n    <line x1=\"50\" y1={findPosition(value)} x2=\"50\" y2={80} stroke=\"#0ff\" strokeWidth=\"8\" strokeLinecap=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default Thermometer;\r\n","import './Of.css';\r\n\r\nconst Of = ({numerator, denominator}) => (\r\n  <div>\r\n    <div className=\"numerator\">{numerator}</div>\r\n    <div className=\"denominator\">{denominator}</div>\r\n  </div>\r\n);\r\n\r\nexport default Of;\r\n","import readableBytes from 'readable-bytes';\r\n\r\nimport Doughnut from '../doughnut';\r\nimport Thermometer from '../thermometer';\r\nimport Of from './Of';\r\n\r\nimport './CardFront.css';\r\n\r\nconst CardFront = ({\r\n  header,\r\n  CPU_USAGE,\r\n  CPU_PROCESSES,\r\n  CPU_TEMPERATURE,\r\n  GPU_TEMPERATURE,\r\n  RAM_USAGE,\r\n  RAM_TOTAL,\r\n  GPU_RAM_USAGE,\r\n  GPU_RAM_TOTAL,\r\n  DISK_USAGE,\r\n  DISK_TOTAL,\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"card-front\">\r\n\r\n      {header}\r\n\r\n      <main>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"tile\">\r\n            <h3>CPU</h3>\r\n            <Doughnut value={CPU_USAGE} total={100} />\r\n            <div>{CPU_PROCESSES}p</div>\r\n          </div>\r\n          <div className=\"tile\">\r\n            <h3>CPU</h3>\r\n            <Thermometer value={CPU_TEMPERATURE} />\r\n            <div>{CPU_TEMPERATURE}°C</div>\r\n          </div>\r\n          <div className=\"tile\">\r\n            <h3>GFX</h3>\r\n            <Thermometer value={GPU_TEMPERATURE} />\r\n            <div>{GPU_TEMPERATURE}°C</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"tile\">\r\n            <h3>SYS RAM</h3>\r\n            <Doughnut value={RAM_USAGE} total={RAM_TOTAL} />\r\n            <Of numerator={readableBytes(RAM_USAGE, 10)} denominator={readableBytes(RAM_TOTAL, 10)} />\r\n          </div>\r\n          <div className=\"tile\">\r\n            <h3>GFX RAM</h3>\r\n            <Doughnut value={GPU_RAM_USAGE} total={GPU_RAM_TOTAL} />\r\n            <Of numerator={readableBytes(GPU_RAM_USAGE, 10)} denominator={readableBytes(GPU_RAM_TOTAL, 10)} />\r\n          </div>\r\n          <div className=\"tile\">\r\n            <h3>DISK</h3>\r\n            <Doughnut value={DISK_USAGE} total={DISK_TOTAL} />\r\n            <Of numerator={readableBytes(DISK_USAGE, 10)} denominator={readableBytes(DISK_TOTAL, 10)} />\r\n          </div>\r\n        </div>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardFront;\r\n","import { useEffect, useState } from 'react';\r\nimport fetch from 'node-fetch';\r\n\r\nconst Controls = ({endpoint}) => {\r\n  const [controls, setControls] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(`${endpoint}:9009/list`);\r\n        const json = await res.json();\r\n        console.log(json);\r\n        setControls(json);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [endpoint]);\r\n\r\n  if (controls.length === 0) return <>[ no controls ]</>;\r\n\r\n  const click = async (control) => {\r\n    try {\r\n      const res = await fetch(`${endpoint}:9009/${control}`);\r\n      const text = await res.text();\r\n      alert(text);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return controls.map((control) => (\r\n    <button key={control} onClick={() => click(control)}>\r\n      {control}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default Controls;\r\n","import readableBytes from 'readable-bytes';\r\nimport { DateTime } from 'luxon';\r\n\r\nimport Controls from './Controls';\r\n\r\nimport './CardBack.css';\r\n\r\nconst CardBack = ({\r\n  header,\r\n  RAM_TOTAL,\r\n  GPU_RAM_TOTAL,\r\n  NET_LOCAL_IP,\r\n  PI_VERSION,\r\n  HOST_OS_PRETTY_NAME,\r\n  HOST_KERNEL,\r\n  HOST_START,\r\n  HOST_USERS,\r\n  NET_OPEN_PORTS,\r\n  ENUM_TIME,\r\n  NODE_V,\r\n  NPM_V,\r\n  NET_ETH_TX,\r\n  NET_ETH_RX,\r\n  NET_WLAN_TX,\r\n  NET_WLAN_RX,\r\n  DISK_READ,\r\n  DISK_WRITTEN,\r\n  endpoint,\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"card-back\">\r\n      {header}\r\n      <footer>\r\n        <div>{NET_LOCAL_IP}</div>\r\n        <div>Raspberry Pi {PI_VERSION}</div>\r\n        <div>total RAM: {readableBytes(RAM_TOTAL  + GPU_RAM_TOTAL, 10)}</div>\r\n        <Controls endpoint={endpoint}/>\r\n        <div>{HOST_OS_PRETTY_NAME}</div>\r\n        <div>kernel: {HOST_KERNEL}</div>\r\n        <div>{HOST_START}</div>\r\n        <div>(started {DateTime.fromFormat(HOST_START, 'yyyy-MM-dd HH:mm:ss').toRelative()})</div>\r\n        <div>{HOST_USERS} user(s)</div>\r\n        <div>open ports: {NET_OPEN_PORTS}</div>\r\n        <div>last enum: {ENUM_TIME}</div>\r\n        {NODE_V ? <div>node: {NODE_V}, npm: {NPM_V}</div> : null}\r\n        {(NET_ETH_TX || NET_ETH_RX) ? \r\n          <div className=\"tile\">\r\n            <div>ETHERNET ⬆️ {readableBytes(NET_ETH_TX, 10)}</div>\r\n            <div>ETHERNET ⬇️ {readableBytes(NET_ETH_RX, 10)}</div>\r\n          </div> :\r\n          null\r\n        }\r\n\r\n        {(NET_WLAN_TX || NET_WLAN_RX) ?\r\n          <div className=\"tile\">\r\n            <div>WIFI ⬆️ {readableBytes(NET_WLAN_TX, 10)}</div>\r\n            <div>WIFI ⬇️ {readableBytes(NET_WLAN_RX, 10)}</div>\r\n          </div> :\r\n          null\r\n        }\r\n        <div>read: {DISK_READ ? readableBytes(DISK_READ, 10) : '?'}</div> \r\n        <div>written: {DISK_WRITTEN ? readableBytes(DISK_WRITTEN, 10): '?'}</div> \r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBack;\r\n","import { useEffect, useState } from 'react';\r\nimport fetch from 'node-fetch';\r\n\r\nimport Card from './Card';\r\nimport CardFront from './CardFront';\r\nimport CardBack from './CardBack';\r\n\r\nconst HydratedCard = ({endpoint}) => {\r\n  const [now, setNow] = useState(0);\r\n  const [timeOfNextUpdate, setTimeOfNextUpdate] = useState(0);\r\n  const [status, setStatus] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    if(status !== 'error') {\r\n      const polling = setInterval(() => { setNow(Date.now()); }, 80);\r\n      return () => clearInterval(polling);\r\n    }\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    if(!['error', 'loading', 'offline'].includes(status)) {\r\n      const fetchData = async () => {\r\n        try {\r\n          setStatus('loading');\r\n          const res = await fetch(`${endpoint}:9009/sysinfo`);\r\n          // const res = await fetchTimeout(`${endpoint}:9009/`, 3000);\r\n          const json = await res.json();\r\n          setData(json);\r\n          setTimeOfNextUpdate(Date.now() + (json?.ENUM_TIME*1000||0) + 10000);\r\n          setStatus(`done`);\r\n        } catch (e) {\r\n          console.log(e);\r\n          setStatus('offline');\r\n        }\r\n      };\r\n      if(now > timeOfNextUpdate) fetchData();\r\n      else setStatus(`${Math.ceil(timeOfNextUpdate - Date.now())}ms`)\r\n    }\r\n  }, [endpoint, now]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const header = (\r\n    <header>\r\n      <h2 className=\"title\">{data?.HOST_NAME || endpoint}</h2>\r\n    </header>\r\n  );\r\n\r\n  return (\r\n    <Card status={status}>\r\n      {data ? [\r\n        <CardFront header={header} {...data} />,\r\n        <CardBack header={header} {...data} endpoint={endpoint}/>\r\n      ] : [\r\n        <div className=\"card-front\">{header}no data</div>,\r\n        <div className=\"card-front\">{header}no data</div>,\r\n      ]}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HydratedCard;\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Card from './card';\n\nconst endpoints = [\n  // '//192.168.0.100',\n  '//192.168.0.40',\n  // '//192.168.0.13',\n  // '//192.168.0.150',\n  // '//192.168.0.200',\n  // '//192.168.0.190',\n];\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <h1>tinyman</h1>\n      </header>\n      <main className=\"App-main\">\n        {endpoints.map((endpoint) => <Card key={endpoint} endpoint={endpoint}/>)}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}